version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.1.0
  aws-eks: circleci/aws-eks@0.1.0
  kubernetes: circleci/kubernetes@0.3.0
  aws-cli: circleci/aws-cli@0.1.1

commands:
  set-aws-environment-variables:
    description: |
      Set environment variables so that they can be used in each step of a job.
      https://circleci.com/docs/2.0/env-vars/#using-bash_env-to-set-environment-variables
    parameters:
      aws-access-key-id:
        type: string
        description: |
         AWS Access Key ID
      aws-secret-access-key:
        type: string
        description: |
          AWS Secret Access Key
      aws-region:
        type: string
        description: |
          AWS Region
    steps:
      - run:
          name: Set environment variables
          command: |
            echo 'export AWS_ACCESS_KEY_ID="<< parameters.aws-access-key-id >>"' >> $BASH_ENV
            echo 'export AWS_SECRET_ACCESS_KEY="<< parameters.aws-secret-access-key >>"' >> $BASH_ENV
            echo 'export AWS_REGION="<< parameters.aws-region >>"' >> $BASH_ENV

jobs:
  build-and-push-images:
    # `docker_layer_caching` might speed up the builds but it costs extra money.
    # We need to investigate the tradeoff.
    # docker_layer_caching: true
    machine: true
    parameters:
      aws-access-key-id:
        type: string
        description: |
         AWS Access Key ID
      aws-secret-access-key:
        type: string
        description: |
          AWS Secret Access Key
      aws-region:
        type: string
        description: |
          AWS Region
    steps:
      - set-aws-environment-variables:
          aws-access-key-id: << parameters.aws-access-key-id >>
          aws-secret-access-key: << parameters.aws-secret-access-key >>
          aws-region: << parameters.aws-region >>
      - aws-ecr/build-and-push-image:
          account-url: ECR_ACCOUNT_URL
          extra-build-args: "--target development-dependencies"
          repo: "${ECR_REPO_NAME}"
          tag: "${CIRCLE_SHA1}_dev-image"
      - aws-ecr/build-and-push-image:
          account-url: ECR_ACCOUNT_URL
          extra-build-args: "--target build"
          repo: "${ECR_REPO_NAME}"
          tag: "${CIRCLE_SHA1}_build-image"
  deploy-services:
    executor: aws-eks/python3
    parameters:
      deploy-write-services:
        description: |
          If this value is false then some write services won't be deployed.
          This is needed in the test environment.
        type: boolean
        default: true
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
      aws-region:
        description: |
          AWS Region
        type: string
      aws-access-key-id:
        type: string
        description: |
         AWS Access Key ID
      aws-secret-access-key:
        type: string
        description: |
          AWS Secret Access Key
    steps:
      - set-aws-environment-variables:
          aws-access-key-id: << parameters.aws-access-key-id >>
          aws-secret-access-key: << parameters.aws-secret-access-key >>
          aws-region: << parameters.aws-region >>
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          install-kubectl: true
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.aws-region >>
      - run:
          name: run db migrations
          command: |
            # run db migration
            sh ./scripts/run-db-migration.sh
      - run:
          name: deploy
          command: |
            # deploy services
            DEPLOY_WRITE_SERVICES=<< parameters.deploy-write-services >> sh ./scripts/deploy-services.sh

            # check pod status
            kubectl get pods

workflows:
  deployment:
    jobs:
      - build-and-push-images:
          aws-region: "${AWS_REGION}"
          aws-access-key-id: "${TEST_AWS_ACCESS_KEY_ID}"
          aws-secret-access-key: "${TEST_AWS_SECRET_ACCESS_KEY}"
          filters:
            branches:
              only: master

      # deploy test environment
      - deploy-services:
          requires:
            - build-and-push-images
          deploy-write-services: false
          aws-region: "${AWS_REGION}"
          aws-access-key-id: "${TEST_AWS_ACCESS_KEY_ID}"
          aws-secret-access-key: "${TEST_AWS_SECRET_ACCESS_KEY}"
          cluster-name: eks-cluster-4

      # TODO add API urls to param store
      # TODO run integration tests

      # - deploy-services:
      #     requires:
      #       - deploy-test
      # - deploy-services:
      #     requires:
      #       - deploy-test
